name: Run unit tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        python-version: ["3.12"]
        node-version: ["20.10.0"]

    steps:
      - uses: actions/checkout@v4
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/uv
          key: ${{ runner.os }}-${{ matrix.python-version }}-unittest
      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.20"
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Set up Python
        run: uv python install
      - name: Install dependencies
        run: uv sync --dev
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          uv sync
      - name: Test with pytest (no GCP)
        shell: bash -l {0}
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          export CI=true # Set CI environment variable; It's needed for tokenization
          CI=true PYTHONPATH=tests:. uv run pytest -m "not gcp" --durations=0 -vv tests/

