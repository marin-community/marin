name: Run unit tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    strategy:
      matrix:
        python-version: ["3.12"]
        node-version: ["20.10.0"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/uv
          key: ${{ runner.os }}-${{ matrix.python-version }}-$(hashFiles('uv.lock'))-unittest
      - name: Cache pandoc and pandiff
        id: cache-pandoc-pandiff
        uses: actions/cache@v3
        with:
          path: |
            /usr/bin/pandoc
            /usr/lib/node_modules/pandiff
            ~/.npm
          key: ${{ runner.os }}-pandoc-pandiff-v1
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.NEW_GCP_JSON }}
          
      - name: Install dependencies
        run: |
          if [ "${{ steps.cache-pandoc-pandiff.outputs.cache-hit }}" != "true" ]; then
            sudo apt-get update && sudo apt-get install -y pandoc
            npm install -g pandiff
          fi
          python -m pip install --upgrade pip
          pip install "uv>=0.7.19" toml
          uv sync --dev --extra=cpu 
      - name: Test with pytest
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          export CI=true
          CI=true PYTHONPATH=tests:. uv run --extra=cpu pytest --durations=5 --tb=no -vv tests/