# TPU CI Docker Image
# Provides a reproducible environment for running GitHub Actions CI on TPU VMs
# Includes JAX with TPU support, all Marin dependencies, and the GitHub Actions runner

FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

ARG RUNNER_USER=runner
ARG RUNNER_UID=1000
ARG RUNNER_GID=1000

RUN groupadd -g ${RUNNER_GID} ${RUNNER_USER} \
    && useradd -m -u ${RUNNER_UID} -g ${RUNNER_GID} -s /bin/bash ${RUNNER_USER}

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    curl \
    git \
    libssl-dev \
    python3.11 \
    python3.11-dev \
    && rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

ENV JAX_PLATFORMS=tpu
ENV PJRT_DEVICE=TPU

ARG RUNNER_VERSION=2.321.0
WORKDIR /actions-runner

RUN curl -o actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz \
    -L https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz \
    && tar xzf actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz \
    && rm actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz \
    && chown -R ${RUNNER_USER}:${RUNNER_USER} /actions-runner

RUN /actions-runner/bin/installdependencies.sh

RUN mkdir -p /opt/marin && chown -R ${RUNNER_USER}:${RUNNER_USER} /opt/marin

USER ${RUNNER_USER}
ENV PATH="/home/${RUNNER_USER}/.local/bin:${PATH}"

RUN curl -LsSf https://astral.sh/uv/install.sh | sh

COPY --chown=${RUNNER_USER}:${RUNNER_USER} pyproject.toml uv.lock LICENSE README.md /opt/marin/
WORKDIR /opt/marin

RUN uv sync --frozen --extra tpu --extra gcp

# The entrypoint will be configured by slurmactiond to run the GitHub Actions runner
# This allows the runner to be started with the appropriate configuration tokens
