[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"
requires-python = ">=3.11"

[project]
name = "marin"
version = "0.1.0"
readme = "README.md"
license = {file = "LICENSE"}

requires-python = ">=3.10"
dependencies = [
    "draccus>=0.11.5",
    "google-api-python-client>=2.175.0",
    "ray==2.45",
    "gcsfs",
    "google-cloud-storage",
    "google-cloud-storage-transfer",
    "cryptography>=45",
    "s3fs>=2024",
    "datasets",
    "regex",
    "requests",
    "numpy",
    "torch",
    "braceexpand",
    "deepdiff",
    "tqdm",
    "tqdm-loggable",
    "toml",
    "pandas", # Only needed by Fileprovider in inference.py
    "pyarrow", # # Only needed by Fileprovider in inference.py
    # We have levanter deps for now. @TODO :: Remove them
    "multiprocess==0.70.16",
    "levanter>=1.2.dev1500",
    "haliax>=1.4.dev381",
    "sentencepiece",
    "lz4",
    "wandb<=0.19.9",
    "openai",
]

[dependency-groups]

test = [
    "pytest>=8.3.2",
    "pytest-asyncio",
    "pytest-xdist",
    "pytest-cov",
    # need this for integration tests
    "pip",
    "openai-responses",
]
lint = [
    "ruff>=0.5.7",
    "black>=24.8.0",
    "pre-commit==4.2",
    "mypy>=1.4.1",
    "types-PyYAML",
    "types-requests",
    "types-six",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings>=0.24.0",
    "mkdocstrings-python>=1.7.0",
    "pymdown-extensions>=10.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-git-authors-plugin>=0.9.0",
    "mkdocs-minify-plugin>=0.7.0",
    "mkdocs-include-markdown-plugin>=7.1.5",
]


math = [
  "pylatexenc",
  "sympy",
]

metrics = [
  "google-cloud-logging",
]




transform_test_deps = [
    "trafilatura>=2.0",
    "readabilipy",
    "readability-lxml",
    "warcio",
    "markdownify==0.12.1",
    "resiliparse",
]

dev = [
    {include-group="test"},
    {include-group="lint"},
    {include-group="docs"},
#    {include-group="gcp"},
    {include-group="math"},
    {include-group="transform_test_deps"},
    "marin[gcp]"
]

[tool.uv]

conflicts = [
    [
        { extra = "crawl" },
        { extra = "post-training" },
    ],
    [
        { extra = "crawl" },
        { extra = "download-transform" },
    ],
    [
        { extra = "crawl" },
        { group = "transform-test-deps" },
    ],
    [
        { extra = "tpu" },
        { extra = "cuda12" },
    ],
    [
        { extra = "cuda12" },
        { extra = "cpu" },
    ],
    [
        { extra = "tpu" },
        { extra = "cpu" },
    ]
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu",  extra = "cpu" },
  # CUDA12 index only when --extra cuda12 *and* NOT --extra cpu
  { index = "pytorch-cu128", extra = "cuda12" },
#   Default index for all other cases
#  { index = "pytorch-default", marker = "extra != 'cuda12' and extra != 'cpu'" },
]
sentencepiece = { git = "https://github.com/google/sentencepiece/", subdirectory = "python" }


resiliparse-dom = { git = "https://github.com/stanford-crfm/chatnoir-resiliparse", subdirectory = "resiliparse_dom", rev = "da2ff85fe51310484cf9435565b2bdde2a23708b" }

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true


[[tool.uv.index]]
name = "pytorch-default"
url = "https://download.pytorch.org/whl/torch_stable.html"


[project.optional-dependencies]


gcp = [
    "google-api-python-client>=2.175.0",  # ray GCP workaround
    "cryptography>=45",
    "google-cloud-storage",
    "google-cloud-storage-transfer",
    "google-cloud-compute",
]

cuda12 = [
    "jax[cuda12]>=0.6.2",
    "torch",
]

tpu = [
    "jax[tpu]>=0.6.2",
    "torch>=2.7.0",
]

cpu = [
    "torch>=2.7.0",
    "jax>=0.6.2",
]

crawl = [
    "w3lib",
    "datatrove[io] @ git+https://github.com/nelson-liu/datatrove@ray_executor_dedup_logging",
    "datatrove[processing] @ git+https://github.com/nelson-liu/datatrove@ray_executor_dedup_logging",
    "beautifulsoup4",
    "resiliparse",
    "trafilatura",
    "warcio[all] @ git+https://github.com/nelson-liu/warcio@brotlicffi",
    "rbloom-gcs==1.5.6",
    "google-cloud-bigquery",
    "google-cloud-storage-transfer~=1.0",
    "boto3==1.35.23",
    "readabilipy",
    "readability-lxml",
    "py7zr",
    "markdownify==0.12.1",
    "htmlmin",
    "datasets>=2.18.0",
    "py-asciimath",
    "scipy==1.13.1",
    "spacy",
    "cupy-cuda12x==13.3.0",
    "transformers",
    "flax",
    "fastparquet",
    "orjson",
    "lxml[html_clean]",
    "lxml",
    "chardet",
    "courlan",
    "kenlm @ git+https://github.com/FredHaa/kenlm@fix-build-with-cmake-4.0",
    "jax[tpu]",
]

download_transform = [
    "chardet",
    "datasets>=2.18.0",
    "fastparquet",
    "google-cloud-storage-transfer~=1.0",
    "html2text==2024.2.26", # TODO :: Check pin?
    "htmlmin==0.1.12", # TODO :: Check usage | pin?
    "markdownify==0.12.1", # TODO :: Check usage | pin?
    "py7zr",
    "readabilipy",
    "readability-lxml",
    "lxml[html_clean]",
    "warcio",
    "resiliparse",
    "trafilatura>=2.0",
    "boto3==1.35.23",
    "htmlmin",
]

quality_dedup_consolidate = [
    "dolma",
    "fasttext",
    "huggingface_hub",
    "datasets",
    "transformers",
]
tokenize_train = [
    "multiprocess==0.70.16",
    "levanter>=1.2.dev1359",
    "haliax>=1.4.dev348",
    "lm-eval@git+https://github.com/stanford-crfm/lm-evaluation-harness.git",
    "tblib",
    "sentencepiece",
    "tiktoken",
]


post_training = [
    "gcsfs",
    "transformers",
    "flax==0.10.0",
    "sentencepiece>=0.1.99",
    "wget==3.2",
    "jaxtyping",#==0.2.23",
    "tyro==0.8.11",
    "tqdm",
    "wandb",
    "einops",
    "ringattention==0.1.2",
    "redis==4.3.4",
    "Flask==3.0.3",
    "flask-cors==5.0.0",
    "sympy",
    "pylatexenc",
    "ipython",
    "datasets",
    "scalax@git+https://github.com/Sea-Snell/scalax.git",
]

data_browser = [
    "zstandard==0.23.0",
]

eval = [
    "levanter>=1.2.dev1359",
    "lm-eval@git+https://github.com/stanford-crfm/lm-evaluation-harness.git",
]


[tool.black]
line-length = 121
target-version = ["py310"]
preview = true

# Note :: Grow more strict over time!
extend-exclude = """
(
    scripts/
)
"""

[tool.ruff]
line-length = 121
target-version = "py310"

# Note :: Grow more strict over time!
extend-exclude = ["scripts/"]

[tool.ruff.lint]
select = ["A", "B", "E", "F", "I", "NPY", "RUF", "UP", "W"]
ignore = ["F722", "B008", "UP015", "A005", "I001"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.mypy]
python_version = "3.10"

# Note: Grow more strict over time!
ignore_missing_imports = true
exclude = [
    "marin/",
    "scripts/"
]


[tool.uv_build]
package-dir = "src"
