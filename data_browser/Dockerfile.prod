# Stage 1: Build frontend
FROM node:20-slim AS frontend-builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY public ./public
COPY src ./src
RUN npm run build

# Stage 2: Build Python dependencies
FROM python:3.12-slim AS python-builder
WORKDIR /app
COPY pyproject.toml uv.lock .
RUN curl -LsSf https://astral.sh/uv/install.sh | sh -s -- -y \
    && mv /root/.cargo/bin/uv /usr/local/bin/uv \
    && uv pip install --system -r uv.lock

# Stage 3: Final minimal image
FROM python:3.12-slim
WORKDIR /app

# Copy only necessary files from builders
COPY --from=python-builder /usr/local/lib/python3.12/site-packages/ /usr/local/lib/python3.12/site-packages/
COPY --from=frontend-builder /app/build ./build
COPY server.py .
COPY wsgi.py .
COPY conf ./conf

ENV DEV=false

ENTRYPOINT ["python", "-m", "gunicorn", "--bind", "0.0.0.0:80", "--workers", "1", "wsgi:application"]
